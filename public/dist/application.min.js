"use strict";var ApplicationConfiguration=function(){var applicationModuleName="ophthalmocare",applicationModuleVendorDependencies=["ngResource","ngCookies","ngAnimate","ngTouch","ngSanitize","ui.router","ui.bootstrap","ui.utils","ngLodash","angular-loading-bar","toaster","webcam","akoenig.deckgrid","ngImgCrop","angularMoment","angularFileUpload","pascalprecht.translate","ui.select","schemaForm"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("!")}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("action"),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("directives"),ApplicationConfiguration.registerModule("examinations"),ApplicationConfiguration.registerModule("manage-users"),ApplicationConfiguration.registerModule("module"),ApplicationConfiguration.registerModule("patients"),ApplicationConfiguration.registerModule("roles"),ApplicationConfiguration.registerModule("security"),ApplicationConfiguration.registerModule("users"),angular.module("action").factory("Action",["$resource",function($resource){return $resource("action/list")}]),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("home",{url:"/",templateUrl:"modules/core/views/home.client.view.html"})}]),angular.module("core").controller("HeaderController",["$scope","Authentication","Menus","$state","CoreProperties","ActionsHandler","Toolbar",function($scope,Authentication,Menus,$state,CoreProperties,ActionsHandler,Toolbar){$scope.authentication=Authentication,$scope.isCollapsed=!1,$scope.menu=Menus.getMenu("topbar"),$scope.toolbarCommands=function(){return Toolbar.getToolbarCommands()},$scope.pageTitle=$state.current.title||null,$scope.showToolBar="/"!=$state.current.url&&"/signin"!=$state.current.url,$scope.pageSubTitle=function(){return CoreProperties.getPageSubTitle()},$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(event,toState,toParams,fromState,fromParams){toState.title&&($scope.pageTitle=toState.title),$scope.showToolBar="/"!=toState.url&&"/signin"!=toState.url,$scope.isCollapsed=!1}),$scope.fireCommand=function(command){ActionsHandler.fireAction(command,null)}}]),angular.module("core").controller("HomeController",["$scope","Authentication",function($scope,Authentication){$scope.authentication=Authentication}]),angular.module("core").factory("CoreProperties",function(){var pageSubTitle=null,setPageSubTitle=function(title){pageSubTitle=title},getPageSubTitle=function(){return pageSubTitle};return{setPageSubTitle:setPageSubTitle,getPageSubTitle:getPageSubTitle}}),angular.module("core").factory("ActionsHandler",["$rootScope",function($rootScope){var action={};return action.fireAction=function(actionName,args){$rootScope.$emit(actionName,args)},action.onActionFired=function(actionName,scope,func){var unbind=$rootScope.$on(actionName,func);scope.$on("$destroy",unbind)},action}]),angular.module("core").factory("Logger",["$log","toaster",function($log,toaster){var logger={};return logger.note=function(message,show_toast){$log.log(message),show_toast&&toaster.pop("note","Note",message)},logger.success=function(message,show_toast){$log.info(message),show_toast&&toaster.pop("success","Success",message)},logger.warn=function(message,show_toast){$log.warn(message),show_toast&&toaster.pop("warning","Warning",message)},logger.error=function(message,show_toast){if(Array.isArray(message))for(var i in message)$log.error(message[i]),show_toast&&toaster.pop("error","Error",message[i]);else $log.error(message),show_toast&&toaster.pop("error","Error",message)},logger.debug=function(messsage){$log.debug(messsage)},logger}]),angular.module("core").service("Menus",["lodash",function(lodash){this.defaultRoles=["*"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;if(this.items){for(var itemIndex in this.items)if(this.items[itemIndex].items){for(var subItemIndex in this.items[itemIndex].items)if(lodash.contains(user._role._actions,this.items[itemIndex].items[subItemIndex].action))return!0}else if(lodash.contains(user._role._actions,this.items[itemIndex].action))return!0}else if(lodash.contains(user._role._actions,this.action))return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,isPublic){return this.menus[menuId]={isPublic:isPublic||!1,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemType,menuItemUIRoute,isPublic,position){return this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,menuItemType:menuItemType||"item",menuItemClass:menuItemType,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].isPublic:isPublic,position:position||0,items:[],shouldRender:shouldRender}),this.menus[menuId]},this.addSubMenuItem=function(menuId,rootMenuItemURL,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,action,position){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===rootMenuItemURL&&this.menus[menuId].items[itemIndex].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].items[itemIndex].isPublic:isPublic,action:null===action||"undefined"==typeof action?this.menus[menuId].items[itemIndex].action:action,position:position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar",!1)}]),angular.module("core").service("Toolbar",function(){this.commands=[],this.addToolbarCommand=function(commandName,commandAction,CommandTitle,commandIcon,position,redirectUrl,confirmMessage){return this.commands.push({command:commandName,action:commandAction,title:CommandTitle,icon:commandIcon,position:position||0,redirect:redirectUrl||null,confirmMsg:confirmMessage||null}),this.commands},this.removeToolbarCommand=function(commandName){for(var itemIndex in this.commands)this.commands[itemIndex].command===commandName&&this.commands.splice(itemIndex,1);return this.commands},this.clearToolbarCommands=function(){return this.commands=[],this.commands},this.getToolbarCommands=function(){return this.commands}}),angular.module("directives").directive("hCareActionBtn",["Authentication","lodash",function(Authentication,lodash){return{restrict:"E",replace:!0,link:function(scope,element,atts){if(lodash.contains(Authentication.user._role._actions,atts.action)&&(null!=atts.redirectUrl&&void 0!=atts.redirectUrl&&""!=atts.redirectUrl&&atts.$observe("redirectUrl",function(redirectUrl){var buttonText='<a class="btn btn-default" href='+redirectUrl+'><i class="glyphicon glyphicon-'+atts.icon+'"></i></a>';element.html(buttonText)}),null!=atts.clickEvent&&void 0!=atts.clickEvent&&""!=atts.clickEvent)){var buttonText="<a class='btn btn-default' ><i class='glyphicon glyphicon-"+atts.icon+"'></i></a>";element.html(buttonText),element.on("click",function(){null!=atts.responseMessage&&void 0!=atts.responseMessage&&""!=atts.responseMessage?confirm(atts.responseMessage)&&scope.$apply(atts.clickEvent):scope.$apply(atts.clickEvent)})}}}}]),angular.module("directives").directive("hCareCheckbtnList",["Authentication","lodash",function(Authentication,lodash){return{restrict:"E",replace:!0,scope:{source:"=",itemLabelField:"@",itemValueField:"@",itemClicked:"&",selectedItems:"=",selectedItemsIds:"@",currentTappedItem:"="},template:'<div class="btn-group" data-toggle="buttons" id={{atts.id}}><label class="btn btn-primary" ng-class="{active:selectedItemsIds  && selectedItemsIds.indexOf(item[itemValueField]) !== -1}"ng-repeat="item in source"> <input type="checkbox"value="{{item[itemLabelField]}}" ng-checked="selectedItemsIds  && selectedItemsIds.indexOf(item[itemValueField]) !== -1"ng-click="itemClicked(item)">{{item[itemLabelField]}}</label></div>',link:function(scope,el,atts){scope.$watch("selectedItems",function(value){scope.selectedItems=scope.selectedItems||[],scope.selectedItemsIds=[];for(var i in scope.selectedItems)lodash.contains(scope.selectedItemsIds,scope.selectedItems[i][scope.itemValueField])||scope.selectedItemsIds.push(scope.selectedItems[i][scope.itemValueField])},!0),scope.itemClicked=function(item){if(scope.selectedItemsIds=scope.selectedItemsIds||[],scope.selectedItems=scope.selectedItems||[],atts.isActiveOnClick&&"true"==atts.isActiveOnClick)if(atts.isMultiSelection&&"true"==atts.isMultiSelection)if(lodash.contains(scope.selectedItemsIds,item[scope.itemValueField])){var index=scope.selectedItemsIds.indexOf(item[scope.itemValueField]);scope.selectedItemsIds.splice(index,1),scope.selectedItems.splice(index,1),scope.currentTappedItem=null}else scope.selectedItemsIds.push(item[scope.itemValueField]),scope.selectedItems.push(item),scope.currentTappedItem=item;else if(lodash.contains(scope.selectedItemsIds,item[scope.itemValueField])){var index=scope.selectedItemsIds.indexOf(item[scope.itemValueField]);scope.selectedItemsIds.splice(index,1),scope.selectedItems.splice(index,1),scope.selectedItemsIds=[],scope.selectedItems=[],scope.currentTappedItem=null}else scope.selectedItemsIds=[],scope.selectedItems=[],scope.selectedItemsIds.push(item[scope.itemValueField]),scope.selectedItems.push(item),scope.currentTappedItem=item;else scope.currentTappedItem=item}}}}]),angular.module("directives").directive("hCareDelButton",["Authentication","lodash",function(Authentication,lodash){return{restrict:"E",replace:!0,link:function(scope,el,atts){if(lodash.contains(Authentication.user._role._actions,atts.action)){var buttonText="<a class='btn btn-primary' ><i class='glyphicon glyphicon-trash'></i></a>";el.html(buttonText),el.on("click",function(){var result=confirm(atts.delMessage);result&&(console.log(typeof atts.hcareDelClick),scope.$apply(atts.hcareDelClick))})}}}}]),angular.module("directives").directive("hCareEditButton",["Authentication","lodash",function(Authentication,lodash){return{restrict:"E",replace:!0,scope:{href:"@"},link:function(scope,el,atts){lodash.contains(Authentication.user._role._actions,atts.action)&&atts.$observe("href",function(href){var buttonText='<a class="btn btn-primary" href='+href+'><i class="glyphicon glyphicon-edit"></i></a>';el.html(buttonText)})}}}]),angular.module("directives").directive("hCareExamineButton",["Authentication","lodash",function(Authentication,lodash){return{restrict:"E",replace:!0,link:function(scope,el,atts){if(lodash.contains(Authentication.user._role._actions,atts.action)){var buttonText="<a class='btn btn-primary' ><i class='glyphicon glyphicon-eye-open'></i></a>";el.html(buttonText),el.on("click",function(){scope.$apply(atts.hcareExamineClick)})}}}}]),angular.module("examinations").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Examinations","examinations","dropdown","/examinations(/create)?",!1,3),Menus.addSubMenuItem("topbar","examinations","List Examinations","examinations","/examinations",!1,"list_examinations",0),Menus.addSubMenuItem("topbar","examinations","Search Examinations","examinations/search","/examinations/search",!1,"search_examinations",1)}]),angular.module("examinations").config(["$stateProvider",function($stateProvider){$stateProvider.state("listExaminations",{url:"/examinations",templateUrl:"modules/examinations/views/list-examinations.client.view.html",action:"list_examinations",title:"Examinations"}).state("patientExaminations",{url:"/examinations/:patientId",templateUrl:"modules/examinations/views/patient-examinations.client.view.html",action:"search_examinations",title:"Patient Examinations"}).state("searchExaminations",{url:"/examinations/search",templateUrl:"modules/examinations/views/search-examinations.client.view.html",action:"search_examinations",title:"Search Examinations"}).state("createExamination",{url:"/examinations/create/:patientId",templateUrl:"modules/examinations/views/create-examination.client.view.html",action:"create_examination",title:"New Examination"}).state("viewExamination",{url:"/examinations/:examinationId",templateUrl:"modules/examinations/views/view-examination.client.view.html",action:"view_examination",title:"View Examination"}).state("editExamination",{url:"/examinations/:examinationId/edit",templateUrl:"modules/examinations/views/edit-examination.client.view.html",action:"edit_examination",title:"Edit Examinations"})}]),angular.module("examinations").controller("ExaminationsController",["$scope","$stateParams","$location","Authentication","Examinations","lodash","$q","Patients","CoreProperties","ActionsHandler","Toolbar","Logger",function($scope,$stateParams,$location,Authentication,Examinations,lodash,$q,Patients,CoreProperties,ActionsHandler,Toolbar,Logger){$scope.authentication=Authentication,$scope.tabsConfig={},$scope.tabsConfig.showResuls=!1,$scope.tagTransform=function(newTag){var item={label:newTag,value:newTag.toLowerCase()};return item},$scope.forms={},$scope.form=[{type:"section",htmlClass:"row",items:[{type:"section",htmlClass:"col-xs-5 topMargin",items:[{key:"oculusDexter.appearance",feedback:"{'glyphicontop': true, 'glyphicon': true, 'glyphicon-ok': hasSuccess(), 'glyphicon-remove': hasError()}",notitle:!0,options:{tagging:$scope.tagTransform,taggingLabel:"(new)",taggingTokens:"ENTER"}}]},{type:"help",helpvalue:'<label class="control-label topMargin ng-binding">Appearance</label>',htmlClass:"col-xs-2 col-centered"},{type:"section",htmlClass:"col-xs-5 topMargin",items:[{key:"oculusSinister.appearance",feedback:"{'glyphicontop': true, 'glyphicon': true, 'glyphicon-ok': hasSuccess(), 'glyphicon-remove': hasError()}",notitle:!0,options:{tagging:$scope.tagTransform,taggingLabel:"(new)",taggingTokens:"ENTER"}}]}]},{type:"section",htmlClass:"row",items:[{type:"section",htmlClass:"col-xs-5",items:[{key:"oculusDexter.eyeLid",feedback:"{'glyphicontop': true, 'glyphicon': true, 'glyphicon-ok': hasSuccess(), 'glyphicon-remove': hasError()}",notitle:!0,options:{tagging:$scope.tagTransform,taggingLabel:"(new)",taggingTokens:"ENTER"}}]},{type:"help",helpvalue:'<label class="control-label ng-binding">Eye Lid</label>',htmlClass:"col-xs-2 col-centered"},{type:"section",htmlClass:"col-xs-5",items:[{key:"oculusSinister.eyeLid",feedback:"{'glyphicontop': true, 'glyphicon': true, 'glyphicon-ok': hasSuccess(), 'glyphicon-remove': hasError()}",notitle:!0,options:{tagging:$scope.tagTransform,taggingLabel:"(new)",taggingTokens:"ENTER"}}]}]},{type:"section",htmlClass:"row",items:[{type:"section",htmlClass:"col-xs-5",items:[{key:"oculusDexter.lacrimalSystem",feedback:"{'glyphicontop': true, 'glyphicon': true, 'glyphicon-ok': hasSuccess(), 'glyphicon-remove': hasError()}",notitle:!0,options:{tagging:$scope.tagTransform,taggingLabel:"(new)",taggingTokens:"ENTER"}}]},{type:"help",helpvalue:'<label class="control-label ng-binding">Lacrimal System</label>',htmlClass:"col-xs-2 col-centered"},{type:"section",htmlClass:"col-xs-5",items:[{key:"oculusSinister.lacrimalSystem",feedback:"{'glyphicontop': true, 'glyphicon': true, 'glyphicon-ok': hasSuccess(), 'glyphicon-remove': hasError()}",notitle:!0,options:{tagging:$scope.tagTransform,taggingLabel:"(new)",taggingTokens:"ENTER"}}]}]},{type:"section",htmlClass:"row",items:[{type:"section",htmlClass:"col-xs-5",items:[{key:"oculusDexter.conjunctiva",feedback:"{'glyphicontop': true, 'glyphicon': true, 'glyphicon-ok': hasSuccess(), 'glyphicon-remove': hasError()}",notitle:!0,options:{tagging:$scope.tagTransform,taggingLabel:"(new)",taggingTokens:"ENTER"}}]},{type:"help",helpvalue:'<label class="control-label ng-binding">Conjunctiva</label>',htmlClass:"col-xs-2 col-centered"},{type:"section",htmlClass:"col-xs-5",items:[{key:"oculusSinister.conjunctiva",feedback:"{'glyphicontop': true, 'glyphicon': true, 'glyphicon-ok': hasSuccess(), 'glyphicon-remove': hasError()}",notitle:!0,options:{tagging:$scope.tagTransform,taggingLabel:"(new)",taggingTokens:"ENTER"}}]}]},{type:"section",htmlClass:"row",items:[{type:"section",htmlClass:"col-xs-5",items:[{key:"oculusDexter.sclera",feedback:"{'glyphicontop': true, 'glyphicon': true, 'glyphicon-ok': hasSuccess(), 'glyphicon-remove': hasError()}",notitle:!0,options:{tagging:$scope.tagTransform,taggingLabel:"(new)",taggingTokens:"ENTER"}}]},{type:"help",helpvalue:'<label class="control-label ng-binding">Sclera</label>',htmlClass:"col-xs-2 col-centered"},{type:"section",htmlClass:"col-xs-5",items:[{key:"oculusSinister.sclera",feedback:"{'glyphicontop': true, 'glyphicon': true, 'glyphicon-ok': hasSuccess(), 'glyphicon-remove': hasError()}",notitle:!0,options:{tagging:$scope.tagTransform,taggingLabel:"(new)",taggingTokens:"ENTER"}}]}]},{type:"section",htmlClass:"row",items:[{type:"section",htmlClass:"col-xs-5",items:[{key:"oculusDexter.cornea",feedback:"{'glyphicontop': true, 'glyphicon': true, 'glyphicon-ok': hasSuccess(), 'glyphicon-remove': hasError()}",notitle:!0,options:{tagging:$scope.tagTransform,taggingLabel:"(new)",taggingTokens:"ENTER"}}]},{type:"help",helpvalue:'<label class="control-label ng-binding">Cornea</label>',htmlClass:"col-xs-2 col-centered"},{type:"section",htmlClass:"col-xs-5",items:[{key:"oculusSinister.cornea",feedback:"{'glyphicontop': true, 'glyphicon': true, 'glyphicon-ok': hasSuccess(), 'glyphicon-remove': hasError()}",notitle:!0,options:{tagging:$scope.tagTransform,taggingLabel:"(new)",taggingTokens:"ENTER"}}]}]},{type:"section",htmlClass:"row",items:[{type:"section",htmlClass:"col-xs-5",items:[{key:"oculusDexter.anteriorChamber",feedback:"{'glyphicontop': true, 'glyphicon': true, 'glyphicon-ok': hasSuccess(), 'glyphicon-remove': hasError()}",notitle:!0,options:{tagging:$scope.tagTransform,taggingLabel:"(new)",taggingTokens:"ENTER"}}]},{type:"help",helpvalue:'<label class="control-label ng-binding">Anterior Chamber</label>',htmlClass:"col-xs-2 col-centered"},{type:"section",htmlClass:"col-xs-5",items:[{key:"oculusSinister.anteriorChamber",feedback:"{'glyphicontop': true, 'glyphicon': true, 'glyphicon-ok': hasSuccess(), 'glyphicon-remove': hasError()}",notitle:!0,options:{tagging:$scope.tagTransform,taggingLabel:"(new)",taggingTokens:"ENTER"}}]}]},{type:"section",htmlClass:"row",items:[{type:"section",htmlClass:"col-xs-5",items:[{key:"oculusDexter.iris",feedback:"{'glyphicontop': true, 'glyphicon': true, 'glyphicon-ok': hasSuccess(), 'glyphicon-remove': hasError()}",notitle:!0,options:{tagging:$scope.tagTransform,taggingLabel:"(new)",taggingTokens:"ENTER"}}]},{type:"help",helpvalue:'<label class="control-label ng-binding">Iris</label>',htmlClass:"col-xs-2 col-centered"},{type:"section",htmlClass:"col-xs-5",items:[{key:"oculusSinister.iris",feedback:"{'glyphicontop': true, 'glyphicon': true, 'glyphicon-ok': hasSuccess(), 'glyphicon-remove': hasError()}",notitle:!0,options:{tagging:$scope.tagTransform,taggingLabel:"(new)",taggingTokens:"ENTER"}}]}]},{type:"section",htmlClass:"row",items:[{type:"section",htmlClass:"col-xs-5",items:[{key:"oculusDexter.pupil",feedback:"{'glyphicontop': true, 'glyphicon': true, 'glyphicon-ok': hasSuccess(), 'glyphicon-remove': hasError()}",notitle:!0,options:{tagging:$scope.tagTransform,taggingLabel:"(new)",taggingTokens:"ENTER"}}]},{type:"help",helpvalue:'<label class="control-label ng-binding">Pupil</label>',htmlClass:"col-xs-2 col-centered"},{type:"section",htmlClass:"col-xs-5",items:[{key:"oculusSinister.pupil",feedback:"{'glyphicontop': true, 'glyphicon': true, 'glyphicon-ok': hasSuccess(), 'glyphicon-remove': hasError()}",notitle:!0,options:{tagging:$scope.tagTransform,taggingLabel:"(new)",taggingTokens:"ENTER"}}]}]},{type:"section",htmlClass:"row",items:[{type:"section",htmlClass:"col-xs-5",items:[{key:"oculusDexter.lens",feedback:"{'glyphicontop': true, 'glyphicon': true, 'glyphicon-ok': hasSuccess(), 'glyphicon-remove': hasError()}",notitle:!0,options:{tagging:$scope.tagTransform,taggingLabel:"(new)",taggingTokens:"ENTER"}}]},{type:"help",helpvalue:'<label class="control-label ng-binding">Lens</label>',htmlClass:"col-xs-2 col-centered"},{type:"section",htmlClass:"col-xs-5",items:[{key:"oculusSinister.lens",feedback:"{'glyphicontop': true, 'glyphicon': true, 'glyphicon-ok': hasSuccess(), 'glyphicon-remove': hasError()}",notitle:!0,options:{tagging:$scope.tagTransform,taggingLabel:"(new)",taggingTokens:"ENTER"}}]}]},{type:"section",htmlClass:"row",items:[{type:"section",htmlClass:"col-xs-5",items:[{key:"oculusDexter.fundus",feedback:"{'glyphicontop': true, 'glyphicon': true, 'glyphicon-ok': hasSuccess(), 'glyphicon-remove': hasError()}",notitle:!0,options:{tagging:$scope.tagTransform,taggingLabel:"(new)",taggingTokens:"ENTER"}}]},{type:"help",helpvalue:'<label class="control-label ng-binding">Fundus</label>',htmlClass:"col-xs-2 col-centered"},{type:"section",htmlClass:"col-xs-5",items:[{key:"oculusSinister.fundus",feedback:"{'glyphicontop': true, 'glyphicon': true, 'glyphicon-ok': hasSuccess(), 'glyphicon-remove': hasError()}",notitle:!0,options:{tagging:$scope.tagTransform,taggingLabel:"(new)",taggingTokens:"ENTER"}}]}]},{type:"section",htmlClass:"row",items:[{type:"section",htmlClass:"col-xs-5",items:[{key:"oculusDexter.opticNerve",feedback:"{'glyphicontop': true, 'glyphicon': true, 'glyphicon-ok': hasSuccess(), 'glyphicon-remove': hasError()}",notitle:!0,options:{tagging:$scope.tagTransform,taggingLabel:"(new)",taggingTokens:"ENTER"}}]},{type:"help",helpvalue:'<label class="control-label ng-binding">Optic Nerve</label>',htmlClass:"col-xs-2 col-centered"},{type:"section",htmlClass:"col-xs-5",items:[{key:"oculusSinister.opticNerve",feedback:"{'glyphicontop': true, 'glyphicon': true, 'glyphicon-ok': hasSuccess(), 'glyphicon-remove': hasError()}",notitle:!0,options:{tagging:$scope.tagTransform,taggingLabel:"(new)",taggingTokens:"ENTER"}}]}]},{type:"section",htmlClass:"row",items:[{type:"section",htmlClass:"col-xs-5",items:[{key:"oculusDexter.eom",feedback:"{'glyphicontop': true, 'glyphicon': true, 'glyphicon-ok': hasSuccess(), 'glyphicon-remove': hasError()}",notitle:!0,options:{tagging:$scope.tagTransform,taggingLabel:"(new)",taggingTokens:"ENTER"}}]},{type:"help",helpvalue:'<label class="control-label ng-binding">EOM</label>',htmlClass:"col-xs-2 col-centered"},{type:"section",htmlClass:"col-xs-5",items:[{key:"oculusSinister.eom",feedback:"{'glyphicontop': true, 'glyphicon': true, 'glyphicon-ok': hasSuccess(), 'glyphicon-remove': hasError()}",notitle:!0,options:{tagging:$scope.tagTransform,taggingLabel:"(new)",taggingTokens:"ENTER"}}]}]},{type:"section",htmlClass:"row",items:[{type:"section",htmlClass:"col-xs-5",items:[{key:"oculusDexter.va",type:"text",notitle:!0}]},{type:"help",helpvalue:'<label class="control-label ng-binding">V/A</label>',htmlClass:"col-xs-2 col-centered"},{type:"section",htmlClass:"col-xs-5",items:[{key:"oculusSinister.va",notitle:!0,type:"text"}]}]},{type:"section",htmlClass:"row",items:[{type:"section",htmlClass:"col-xs-5",items:[{key:"oculusDexter.bcva",type:"text",notitle:!0}]},{type:"help",helpvalue:'<label class="control-label ng-binding">BCVA</label>',htmlClass:"col-xs-2 col-centered"},{type:"section",htmlClass:"col-xs-5",items:[{key:"oculusSinister.bcva",notitle:!0,type:"text"}]}]},{type:"section",htmlClass:"row",items:[{type:"section",htmlClass:"col-xs-5",items:[{key:"oculusDexter.bcvaWith",type:"text",notitle:!0}]},{type:"help",helpvalue:'<label class="control-label ng-binding">BCVA With</label>',htmlClass:"col-xs-2 col-centered"},{type:"section",htmlClass:"col-xs-5",items:[{key:"oculusSinister.bcvaWith",notitle:!0,type:"text"}]}]},{type:"section",htmlClass:"row",items:[{type:"section",htmlClass:"col-xs-5",items:[{key:"oculusDexter.iop",type:"text",notitle:!0}]},{type:"help",helpvalue:'<label class="control-label ng-binding">IOP</label>',htmlClass:"col-xs-2 col-centered"},{type:"section",htmlClass:"col-xs-5",items:[{key:"oculusSinister.iop",notitle:!0,type:"text"}]}]},{key:"comment",type:"textarea",placeholder:"Make a comment"}],$scope.schema={type:"object",title:"Examination",properties:{oculusDexter:{type:"object",properties:{appearance:{title:"Appearance",type:"array",format:"uiselect",placeholder:"Normal"},eyeLid:{title:"Eye Lid",type:"array",format:"uiselect",placeholder:"No Abnormality Detected",items:[{value:"rl",label:"RL"},{value:"entropion",label:"Entropion"},{value:"ectropion",label:"Ectropion"},{value:"eistichiasis",label:"Distichiasis"},{value:"ptosis",label:"Ptosis"},{value:"chalazion",label:"Chalazion"},{value:"stye",label:"Stye"},{value:"blepharitis",label:"Blepharitis"},{value:"mass",label:"Mass"},{value:"madarosis",label:"Madarosis"},{value:"epicanthaus",label:"Epicanthaus"},{value:"blepharochalasis",label:"Blepharochalasis"},{value:"dermatochalasis",label:"Dermatochalasis"},{value:"oedema",label:"Oedema"}]},lacrimalSystem:{title:"Lacrimal System",type:"array",format:"uiselect",placeholder:"Normal"},conjunctiva:{title:"Conjunctiva",type:"array",format:"uiselect",placeholder:"Normal",items:[{value:"active-trachoma",label:"Active trachoma"},{value:"t-iii",label:"T III"},{value:"mpc",label:"MPC"},{value:"pc",label:"PC"},{value:"allergy",label:"Allergy"},{value:"vernal-keratoconjunctivitis",label:"Vernal keratoconjunctivitis"},{value:"ptrygeum",label:"Ptrygeum"},{value:"ptds",label:"PTDs"}]},sclera:{title:"Sclera",type:"array",format:"uiselect",placeholder:"Normal",items:[{value:"nodular-episcleritis",label:"Nodular Episcleritis"},{value:"diffuse-episcleritis",label:"Diffuse Episcleritis"},{value:"scleritis",label:"Scleritis"}]},cornea:{title:"Cornea",type:"array",format:"uiselect",placeholder:"Ps, Clear Centre",items:[{value:"scar-of-previous-op.",label:"Scar of previous op."},{value:"ps",label:"Ps"},{value:"nebula",label:"Nebula"},{value:"corneal-ulcer",label:"Corneal Ulcer"},{value:"leukoma-adherent",label:"Leukoma adherent"},{value:"leukoma-non-adherent",label:"Leukoma non-adherent"},{value:"keratitis",label:"Keratitis"},{value:"keratoconus",label:"Keratoconus"},{value:"arcus-senilis",label:"Arcus senilis"},{value:"degeneration",label:"Degeneration"},{value:"stromal-dystophy",label:"Stromal Dystophy"},{value:"endothelial-dystophy",label:"Endothelial Dystophy"},{value:"epithelial-oedema",label:"Epithelial Oedema"},{value:"stromal oedema",label:"Stromal Oedema"},{value:"striated-keratopathy",label:"Striated Keratopathy"}]},anteriorChamber:{title:"Anterior Chamber",type:"array",format:"uiselect",placeholder:"Normal Depth No Abnormal Content",items:[{value:"cells",label:"Cells"},{value:"flare",label:"Flare"},{value:"level-hyphema",label:"level Hyphema"},{value:"diffuse-hyphema",label:"Diffuse Hyphema"},{value:"inflammatory-membrane",label:"Inflammatory membrane"},{value:"hypopion",label:"Hypopion"}]},iris:{title:"Iris",type:"array",format:"uiselect",placeholder:"Normal Color And Pattern"},pupil:{title:"Pupil",type:"array",format:"uiselect",placeholder:"R R R Direct and Cons."},lens:{title:"Lens",type:"array",format:"uiselect",placeholder:"Clear In Place",items:[{value:"imsc",label:"IMSC"},{value:"nuclear-cataract",label:"Nuclear cataract"},{value:"complicated-cataract",label:"Complicated cataract"},{value:"subluxated",label:"Subluxated"},{value:"pseudoexfoliation",label:"Pseudoexfoliation"},{value:"microspherophakia",label:"Microspherophakia"}]},fundus:{title:"Fundus",type:"array",format:"uiselect",placeholder:"Normal",items:[{value:"tessellated",label:"Tessellated"},{value:"myopic",label:"Myopic"},{value:"mild-npdr",label:"Mild NPDR"},{value:"sever npdr",label:"Sever NPDR"},{value:"pdr",label:"PDR"},{value:"macular-oedema",label:"Macular Oedema"},{value:"drusen",label:"Drusen"},{value:"amd",label:"AMD"},{value:"vein-occlusion",label:"Vein occlusion"},{value:"artery-occlusion",label:"Artery occlusion"}]},opticNerve:{title:"Optic Nerve",type:"array",format:"uiselect",placeholder:"Normal",items:[{value:"pale",label:"Pale"},{value:"atrophy",label:"Atrophy"},{value:"increased-cd-ratio",label:"Increased C/D ratio"},{value:"cupping",label:"Cupping"},{value:"papilloedema",label:"Papilloedema"},{value:"tilted",label:"Tilted"}]},va:{title:"V/A",type:"string"},eom:{title:"EOM",type:"array",format:"uiselect",placeholder:"Free Balanced Ocular Motility In The Sex Cardinal Directions"},bcva:{title:"BCVA",type:"string"},bcvaWith:{title:"BCVA With",type:"string"},iop:{title:"IOP",type:"string"}}},oculusSinister:{type:"object",properties:{appearance:{title:"Appearance",type:"array",format:"uiselect",placeholder:"Normal"},eyeLid:{title:"Eye Lid",type:"array",format:"uiselect",placeholder:"No Abnormality Detected",items:[{value:"rl",label:"RL"},{value:"entropion",label:"Entropion"},{value:"ectropion",label:"Ectropion"},{value:"eistichiasis",label:"Distichiasis"},{value:"ptosis",label:"Ptosis"},{value:"chalazion",label:"Chalazion"},{value:"stye",label:"Stye"},{value:"blepharitis",label:"Blepharitis"},{value:"mass",label:"Mass"},{value:"madarosis",label:"Madarosis"},{value:"epicanthaus",label:"Epicanthaus"},{value:"blepharochalasis",label:"Blepharochalasis"},{value:"dermatochalasis",label:"Dermatochalasis"},{value:"oedema",label:"Oedema"}]},lacrimalSystem:{title:"Lacrimal System",type:"array",format:"uiselect",placeholder:"Normal"},conjunctiva:{title:"Conjunctiva",type:"array",format:"uiselect",placeholder:"Normal",items:[{value:"active-trachoma",label:"Active trachoma"},{value:"t-iii",label:"T III"},{value:"mpc",label:"MPC"},{value:"pc",label:"PC"},{value:"allergy",label:"Allergy"},{value:"vernal-keratoconjunctivitis",label:"Vernal keratoconjunctivitis"},{value:"ptrygeum",label:"Ptrygeum"},{value:"ptds",label:"PTDs"}]},sclera:{title:"Sclera",type:"array",format:"uiselect",placeholder:"Normal",items:[{value:"nodular-episcleritis",label:"Nodular Episcleritis"},{value:"diffuse-episcleritis",label:"Diffuse Episcleritis"},{value:"scleritis",label:"Scleritis"}]},cornea:{title:"Cornea",type:"array",format:"uiselect",placeholder:"Ps, Clear Centre",items:[{value:"scar-of-previous-op.",label:"Scar of previous op."},{value:"ps",label:"Ps"},{value:"nebula",label:"Nebula"},{value:"corneal-ulcer",label:"Corneal Ulcer"},{value:"leukoma-adherent",label:"Leukoma adherent"},{value:"leukoma-non-adherent",label:"Leukoma non-adherent"},{value:"keratitis",label:"Keratitis"},{value:"keratoconus",label:"Keratoconus"},{value:"arcus-senilis",label:"Arcus senilis"},{value:"degeneration",
label:"Degeneration"},{value:"stromal-dystophy",label:"Stromal Dystophy"},{value:"endothelial-dystophy",label:"Endothelial Dystophy"},{value:"epithelial-oedema",label:"Epithelial Oedema"},{value:"stromal oedema",label:"Stromal Oedema"},{value:"striated-keratopathy",label:"Striated Keratopathy"}]},anteriorChamber:{title:"Anterior Chamber",type:"array",format:"uiselect",placeholder:"Normal Depth No Abnormal Content",items:[{value:"cells",label:"Cells"},{value:"flare",label:"Flare"},{value:"level-hyphema",label:"level Hyphema"},{value:"diffuse-hyphema",label:"Diffuse Hyphema"},{value:"inflammatory-membrane",label:"Inflammatory membrane"},{value:"hypopion",label:"Hypopion"}]},iris:{title:"Iris",type:"array",format:"uiselect",placeholder:"Normal Color And Pattern"},pupil:{title:"Pupil",type:"array",format:"uiselect",placeholder:"R R R Direct and Cons."},lens:{title:"Lens",type:"array",format:"uiselect",placeholder:"Clear In Place",items:[{value:"imsc",label:"IMSC"},{value:"nuclear-cataract",label:"Nuclear cataract"},{value:"complicated-cataract",label:"Complicated cataract"},{value:"subluxated",label:"Subluxated"},{value:"pseudoexfoliation",label:"Pseudoexfoliation"},{value:"microspherophakia",label:"Microspherophakia"}]},fundus:{title:"Fundus",type:"array",format:"uiselect",placeholder:"Normal",items:[{value:"tessellated",label:"Tessellated"},{value:"myopic",label:"Myopic"},{value:"mild-npdr",label:"Mild NPDR"},{value:"sever npdr",label:"Sever NPDR"},{value:"pdr",label:"PDR"},{value:"macular-oedema",label:"Macular Oedema"},{value:"drusen",label:"Drusen"},{value:"amd",label:"AMD"},{value:"vein-occlusion",label:"Vein occlusion"},{value:"artery-occlusion",label:"Artery occlusion"}]},opticNerve:{title:"Optic Nerve",type:"array",format:"uiselect",placeholder:"Normal",items:[{value:"pale",label:"Pale"},{value:"atrophy",label:"Atrophy"},{value:"increased-cd-ratio",label:"Increased C/D ratio"},{value:"cupping",label:"Cupping"},{value:"papilloedema",label:"Papilloedema"},{value:"tilted",label:"Tilted"}]},eom:{title:"EOM",type:"array",format:"uiselect",placeholder:"Free Balanced Ocular Motility In The Sex Cardinal Directions"},va:{title:"V/A",type:"string"},bcva:{title:"BCVA",type:"string"},bcvaWith:{title:"BCVA With",type:"string"},iop:{title:"IOP",type:"string"}}},comment:{title:"Comment",type:"string"}}},$scope.viewSchema={type:"object",title:"Examination",properties:{oculusDexter:{type:"object",properties:{appearance:{title:"Appearance",type:"array",format:"uiselect",placeholder:"Normal"},eyeLid:{title:"Eye Lid",type:"array",format:"uiselect",placeholder:"No Abnormality Detected",items:[{value:"rl",label:"RL"},{value:"entropion",label:"Entropion"},{value:"ectropion",label:"Ectropion"},{value:"eistichiasis",label:"Distichiasis"},{value:"ptosis",label:"Ptosis"},{value:"chalazion",label:"Chalazion"},{value:"stye",label:"Stye"},{value:"blepharitis",label:"Blepharitis"},{value:"mass",label:"Mass"},{value:"madarosis",label:"Madarosis"},{value:"epicanthaus",label:"Epicanthaus"},{value:"blepharochalasis",label:"Blepharochalasis"},{value:"dermatochalasis",label:"Dermatochalasis"},{value:"oedema",label:"Oedema"}]},lacrimalSystem:{title:"Lacrimal System",type:"array",format:"uiselect",placeholder:"Normal"},conjunctiva:{title:"Conjunctiva",type:"array",format:"uiselect",placeholder:"Normal",items:[{value:"active-trachoma",label:"Active trachoma"},{value:"t-iii",label:"T III"},{value:"mpc",label:"MPC"},{value:"pc",label:"PC"},{value:"allergy",label:"Allergy"},{value:"vernal-keratoconjunctivitis",label:"Vernal keratoconjunctivitis"},{value:"ptrygeum",label:"Ptrygeum"},{value:"ptds",label:"PTDs"}]},sclera:{title:"Sclera",type:"array",format:"uiselect",placeholder:"Normal",items:[{value:"nodular-episcleritis",label:"Nodular Episcleritis"},{value:"diffuse-episcleritis",label:"Diffuse Episcleritis"},{value:"scleritis",label:"Scleritis"}]},cornea:{title:"Cornea",type:"array",format:"uiselect",placeholder:"Ps, Clear Centre",items:[{value:"scar-of-previous-op.",label:"Scar of previous op."},{value:"ps",label:"Ps"},{value:"nebula",label:"Nebula"},{value:"corneal-ulcer",label:"Corneal Ulcer"},{value:"leukoma-adherent",label:"Leukoma adherent"},{value:"leukoma-non-adherent",label:"Leukoma non-adherent"},{value:"keratitis",label:"Keratitis"},{value:"keratoconus",label:"Keratoconus"},{value:"arcus-senilis",label:"Arcus senilis"},{value:"degeneration",label:"Degeneration"},{value:"stromal-dystophy",label:"Stromal Dystophy"},{value:"endothelial-dystophy",label:"Endothelial Dystophy"},{value:"epithelial-oedema",label:"Epithelial Oedema"},{value:"stromal oedema",label:"Stromal Oedema"},{value:"striated-keratopathy",label:"Striated Keratopathy"}]},anteriorChamber:{title:"Anterior Chamber",type:"array",format:"uiselect",placeholder:"Normal Depth No Abnormal Content",items:[{value:"cells",label:"Cells"},{value:"flare",label:"Flare"},{value:"level-hyphema",label:"level Hyphema"},{value:"diffuse-hyphema",label:"Diffuse Hyphema"},{value:"inflammatory-membrane",label:"Inflammatory membrane"},{value:"hypopion",label:"Hypopion"}]},iris:{title:"Iris",type:"array",format:"uiselect",placeholder:"Normal Color And Pattern"},pupil:{title:"Pupil",type:"array",format:"uiselect",placeholder:"R R R Direct and Cons."},lens:{title:"Lens",type:"array",format:"uiselect",placeholder:"Clear In Place",items:[{value:"imsc",label:"IMSC"},{value:"nuclear-cataract",label:"Nuclear cataract"},{value:"complicated-cataract",label:"Complicated cataract"},{value:"subluxated",label:"Subluxated"},{value:"pseudoexfoliation",label:"Pseudoexfoliation"},{value:"microspherophakia",label:"Microspherophakia"}]},fundus:{title:"Fundus",type:"array",format:"uiselect",placeholder:"Normal",items:[{value:"tessellated",label:"Tessellated"},{value:"myopic",label:"Myopic"},{value:"mild-npdr",label:"Mild NPDR"},{value:"sever npdr",label:"Sever NPDR"},{value:"pdr",label:"PDR"},{value:"macular-oedema",label:"Macular Oedema"},{value:"drusen",label:"Drusen"},{value:"amd",label:"AMD"},{value:"vein-occlusion",label:"Vein occlusion"},{value:"artery-occlusion",label:"Artery occlusion"}]},opticNerve:{title:"Optic Nerve",type:"array",format:"uiselect",placeholder:"Normal",items:[{value:"pale",label:"Pale"},{value:"atrophy",label:"Atrophy"},{value:"increased-cd-ratio",label:"Increased C/D ratio"},{value:"cupping",label:"Cupping"},{value:"papilloedema",label:"Papilloedema"},{value:"tilted",label:"Tilted"}]},va:{title:"V/A",type:"string"},eom:{title:"EOM",type:"array",format:"uiselect",placeholder:"Free Balanced Ocular Motility In The Sex Cardinal Directions"},bcva:{title:"BCVA",type:"string"},bcvaWith:{title:"BCVA With",type:"string"},iop:{title:"IOP",type:"string"}}},oculusSinister:{type:"object",properties:{appearance:{title:"Appearance",type:"array",format:"uiselect",placeholder:"Normal"},eyeLid:{title:"Eye Lid",type:"array",format:"uiselect",placeholder:"No Abnormality Detected",items:[{value:"rl",label:"RL"},{value:"entropion",label:"Entropion"},{value:"ectropion",label:"Ectropion"},{value:"eistichiasis",label:"Distichiasis"},{value:"ptosis",label:"Ptosis"},{value:"chalazion",label:"Chalazion"},{value:"stye",label:"Stye"},{value:"blepharitis",label:"Blepharitis"},{value:"mass",label:"Mass"},{value:"madarosis",label:"Madarosis"},{value:"epicanthaus",label:"Epicanthaus"},{value:"blepharochalasis",label:"Blepharochalasis"},{value:"dermatochalasis",label:"Dermatochalasis"},{value:"oedema",label:"Oedema"}]},lacrimalSystem:{title:"Lacrimal System",type:"array",format:"uiselect",placeholder:"Normal"},conjunctiva:{title:"Conjunctiva",type:"array",format:"uiselect",placeholder:"Normal",items:[{value:"active-trachoma",label:"Active trachoma"},{value:"t-iii",label:"T III"},{value:"mpc",label:"MPC"},{value:"pc",label:"PC"},{value:"allergy",label:"Allergy"},{value:"vernal-keratoconjunctivitis",label:"Vernal keratoconjunctivitis"},{value:"ptrygeum",label:"Ptrygeum"},{value:"ptds",label:"PTDs"}]},sclera:{title:"Sclera",type:"array",format:"uiselect",placeholder:"Normal",items:[{value:"nodular-episcleritis",label:"Nodular Episcleritis"},{value:"diffuse-episcleritis",label:"Diffuse Episcleritis"},{value:"scleritis",label:"Scleritis"}]},cornea:{title:"Cornea",type:"array",format:"uiselect",placeholder:"Ps, Clear Centre",items:[{value:"scar-of-previous-op.",label:"Scar of previous op."},{value:"ps",label:"Ps"},{value:"nebula",label:"Nebula"},{value:"corneal-ulcer",label:"Corneal Ulcer"},{value:"leukoma-adherent",label:"Leukoma adherent"},{value:"leukoma-non-adherent",label:"Leukoma non-adherent"},{value:"keratitis",label:"Keratitis"},{value:"keratoconus",label:"Keratoconus"},{value:"arcus-senilis",label:"Arcus senilis"},{value:"degeneration",label:"Degeneration"},{value:"stromal-dystophy",label:"Stromal Dystophy"},{value:"endothelial-dystophy",label:"Endothelial Dystophy"},{value:"epithelial-oedema",label:"Epithelial Oedema"},{value:"stromal oedema",label:"Stromal Oedema"},{value:"striated-keratopathy",label:"Striated Keratopathy"}]},anteriorChamber:{title:"Anterior Chamber",type:"array",format:"uiselect",placeholder:"Normal Depth No Abnormal Content",items:[{value:"cells",label:"Cells"},{value:"flare",label:"Flare"},{value:"level-hyphema",label:"level Hyphema"},{value:"diffuse-hyphema",label:"Diffuse Hyphema"},{value:"inflammatory-membrane",label:"Inflammatory membrane"},{value:"hypopion",label:"Hypopion"}]},iris:{title:"Iris",type:"array",format:"uiselect",placeholder:"Normal Color And Pattern"},pupil:{title:"Pupil",type:"array",format:"uiselect",placeholder:"R R R Direct and Cons."},lens:{title:"Lens",type:"array",format:"uiselect",placeholder:"Clear In Place",items:[{value:"imsc",label:"IMSC"},{value:"nuclear-cataract",label:"Nuclear cataract"},{value:"complicated-cataract",label:"Complicated cataract"},{value:"subluxated",label:"Subluxated"},{value:"pseudoexfoliation",label:"Pseudoexfoliation"},{value:"microspherophakia",label:"Microspherophakia"}]},fundus:{title:"Fundus",type:"array",format:"uiselect",placeholder:"Normal",items:[{value:"tessellated",label:"Tessellated"},{value:"myopic",label:"Myopic"},{value:"mild-npdr",label:"Mild NPDR"},{value:"sever npdr",label:"Sever NPDR"},{value:"pdr",label:"PDR"},{value:"macular-oedema",label:"Macular Oedema"},{value:"drusen",label:"Drusen"},{value:"amd",label:"AMD"},{value:"vein-occlusion",label:"Vein occlusion"},{value:"artery-occlusion",label:"Artery occlusion"}]},opticNerve:{title:"Optic Nerve",type:"array",format:"uiselect",placeholder:"Normal",items:[{value:"pale",label:"Pale"},{value:"atrophy",label:"Atrophy"},{value:"increased-cd-ratio",label:"Increased C/D ratio"},{value:"cupping",label:"Cupping"},{value:"papilloedema",label:"Papilloedema"},{value:"tilted",label:"Tilted"}]},eom:{title:"EOM",type:"array",format:"uiselect",placeholder:"Free Balanced Ocular Motility In The Sex Cardinal Directions"},va:{title:"V/A",type:"string"},bcva:{title:"BCVA",type:"string"},bcvaWith:{title:"BCVA With",type:"string"},iop:{title:"IOP",type:"string"}}},comment:{title:"Comment",type:"string"}},readonly:!0},$scope.viewForm=[{type:"section",htmlClass:"row",items:[{type:"section",htmlClass:"col-xs-5 topMargin",items:[{key:"oculusDexter.appearance",feedback:"{'glyphicontop': true, 'glyphicon': true, 'glyphicon-ok': hasSuccess(), 'glyphicon-remove': hasError()}",notitle:!0,options:{tagging:$scope.tagTransform,taggingLabel:"(new)",taggingTokens:"ENTER"},readonly:!0}]},{type:"help",helpvalue:'<label class="control-label topMargin ng-binding">Appearance</label>',htmlClass:"col-xs-2 col-centered"},{type:"section",htmlClass:"col-xs-5 topMargin",items:[{key:"oculusSinister.appearance",feedback:"{'glyphicontop': true, 'glyphicon': true, 'glyphicon-ok': hasSuccess(), 'glyphicon-remove': hasError()}",notitle:!0,options:{tagging:$scope.tagTransform,taggingLabel:"(new)",taggingTokens:"ENTER"},readonly:!0}]}]},{type:"section",htmlClass:"row",items:[{type:"section",htmlClass:"col-xs-5",items:[{key:"oculusDexter.eyeLid",feedback:"{'glyphicontop': true, 'glyphicon': true, 'glyphicon-ok': hasSuccess(), 'glyphicon-remove': hasError()}",notitle:!0,options:{tagging:$scope.tagTransform,taggingLabel:"(new)",taggingTokens:"ENTER"},readonly:!0}]},{type:"help",helpvalue:'<label class="control-label ng-binding">Eye Lid</label>',htmlClass:"col-xs-2 col-centered"},{type:"section",htmlClass:"col-xs-5",items:[{key:"oculusSinister.eyeLid",feedback:"{'glyphicontop': true, 'glyphicon': true, 'glyphicon-ok': hasSuccess(), 'glyphicon-remove': hasError()}",notitle:!0,options:{tagging:$scope.tagTransform,taggingLabel:"(new)",taggingTokens:"ENTER"},readonly:!0}]}]},{type:"section",htmlClass:"row",items:[{type:"section",htmlClass:"col-xs-5",items:[{key:"oculusDexter.lacrimalSystem",feedback:"{'glyphicontop': true, 'glyphicon': true, 'glyphicon-ok': hasSuccess(), 'glyphicon-remove': hasError()}",notitle:!0,options:{tagging:$scope.tagTransform,taggingLabel:"(new)",taggingTokens:"ENTER"}}]},{type:"help",helpvalue:'<label class="control-label ng-binding">Lacrimal System</label>',htmlClass:"col-xs-2 col-centered"},{type:"section",htmlClass:"col-xs-5",items:[{key:"oculusSinister.lacrimalSystem",feedback:"{'glyphicontop': true, 'glyphicon': true, 'glyphicon-ok': hasSuccess(), 'glyphicon-remove': hasError()}",notitle:!0,options:{tagging:$scope.tagTransform,taggingLabel:"(new)",taggingTokens:"ENTER"}}]}]},{type:"section",htmlClass:"row",items:[{type:"section",htmlClass:"col-xs-5",items:[{key:"oculusDexter.conjunctiva",feedback:"{'glyphicontop': true, 'glyphicon': true, 'glyphicon-ok': hasSuccess(), 'glyphicon-remove': hasError()}",notitle:!0,options:{tagging:$scope.tagTransform,taggingLabel:"(new)",taggingTokens:"ENTER"}}]},{type:"help",helpvalue:'<label class="control-label ng-binding">Conjunctiva</label>',htmlClass:"col-xs-2 col-centered"},{type:"section",htmlClass:"col-xs-5",items:[{key:"oculusSinister.conjunctiva",feedback:"{'glyphicontop': true, 'glyphicon': true, 'glyphicon-ok': hasSuccess(), 'glyphicon-remove': hasError()}",notitle:!0,options:{tagging:$scope.tagTransform,taggingLabel:"(new)",taggingTokens:"ENTER"}}]}]},{type:"section",htmlClass:"row",items:[{type:"section",htmlClass:"col-xs-5",items:[{key:"oculusDexter.sclera",feedback:"{'glyphicontop': true, 'glyphicon': true, 'glyphicon-ok': hasSuccess(), 'glyphicon-remove': hasError()}",notitle:!0,options:{tagging:$scope.tagTransform,taggingLabel:"(new)",taggingTokens:"ENTER"}}]},{type:"help",helpvalue:'<label class="control-label ng-binding">Sclera</label>',htmlClass:"col-xs-2 col-centered"},{type:"section",htmlClass:"col-xs-5",items:[{key:"oculusSinister.sclera",feedback:"{'glyphicontop': true, 'glyphicon': true, 'glyphicon-ok': hasSuccess(), 'glyphicon-remove': hasError()}",notitle:!0,options:{tagging:$scope.tagTransform,taggingLabel:"(new)",taggingTokens:"ENTER"}}]}]},{type:"section",htmlClass:"row",items:[{type:"section",htmlClass:"col-xs-5",items:[{key:"oculusDexter.cornea",feedback:"{'glyphicontop': true, 'glyphicon': true, 'glyphicon-ok': hasSuccess(), 'glyphicon-remove': hasError()}",notitle:!0,options:{tagging:$scope.tagTransform,taggingLabel:"(new)",taggingTokens:"ENTER"}}]},{type:"help",helpvalue:'<label class="control-label ng-binding">Cornea</label>',htmlClass:"col-xs-2 col-centered"},{type:"section",htmlClass:"col-xs-5",items:[{key:"oculusSinister.cornea",feedback:"{'glyphicontop': true, 'glyphicon': true, 'glyphicon-ok': hasSuccess(), 'glyphicon-remove': hasError()}",notitle:!0,options:{tagging:$scope.tagTransform,taggingLabel:"(new)",taggingTokens:"ENTER"}}]}]},{type:"section",htmlClass:"row",items:[{type:"section",htmlClass:"col-xs-5",items:[{key:"oculusDexter.anteriorChamber",feedback:"{'glyphicontop': true, 'glyphicon': true, 'glyphicon-ok': hasSuccess(), 'glyphicon-remove': hasError()}",notitle:!0,options:{tagging:$scope.tagTransform,taggingLabel:"(new)",taggingTokens:"ENTER"}}]},{type:"help",helpvalue:'<label class="control-label ng-binding">Anterior Chamber</label>',htmlClass:"col-xs-2 col-centered"},{type:"section",htmlClass:"col-xs-5",items:[{key:"oculusSinister.anteriorChamber",feedback:"{'glyphicontop': true, 'glyphicon': true, 'glyphicon-ok': hasSuccess(), 'glyphicon-remove': hasError()}",notitle:!0,options:{tagging:$scope.tagTransform,taggingLabel:"(new)",taggingTokens:"ENTER"}}]}]},{type:"section",htmlClass:"row",items:[{type:"section",htmlClass:"col-xs-5",items:[{key:"oculusDexter.iris",feedback:"{'glyphicontop': true, 'glyphicon': true, 'glyphicon-ok': hasSuccess(), 'glyphicon-remove': hasError()}",notitle:!0,options:{tagging:$scope.tagTransform,taggingLabel:"(new)",taggingTokens:"ENTER"}}]},{type:"help",helpvalue:'<label class="control-label ng-binding">Iris</label>',htmlClass:"col-xs-2 col-centered"},{type:"section",htmlClass:"col-xs-5",items:[{key:"oculusSinister.iris",feedback:"{'glyphicontop': true, 'glyphicon': true, 'glyphicon-ok': hasSuccess(), 'glyphicon-remove': hasError()}",notitle:!0,options:{tagging:$scope.tagTransform,taggingLabel:"(new)",taggingTokens:"ENTER"}}]}]},{type:"section",htmlClass:"row",items:[{type:"section",htmlClass:"col-xs-5",items:[{key:"oculusDexter.pupil",feedback:"{'glyphicontop': true, 'glyphicon': true, 'glyphicon-ok': hasSuccess(), 'glyphicon-remove': hasError()}",notitle:!0,options:{tagging:$scope.tagTransform,taggingLabel:"(new)",taggingTokens:"ENTER"}}]},{type:"help",helpvalue:'<label class="control-label ng-binding">Pupil</label>',htmlClass:"col-xs-2 col-centered"},{type:"section",htmlClass:"col-xs-5",items:[{key:"oculusSinister.pupil",feedback:"{'glyphicontop': true, 'glyphicon': true, 'glyphicon-ok': hasSuccess(), 'glyphicon-remove': hasError()}",notitle:!0,options:{tagging:$scope.tagTransform,taggingLabel:"(new)",taggingTokens:"ENTER"}}]}]},{type:"section",htmlClass:"row",items:[{type:"section",htmlClass:"col-xs-5",items:[{key:"oculusDexter.lens",feedback:"{'glyphicontop': true, 'glyphicon': true, 'glyphicon-ok': hasSuccess(), 'glyphicon-remove': hasError()}",notitle:!0,options:{tagging:$scope.tagTransform,taggingLabel:"(new)",taggingTokens:"ENTER"}}]},{type:"help",helpvalue:'<label class="control-label ng-binding">Lens</label>',htmlClass:"col-xs-2 col-centered"},{type:"section",htmlClass:"col-xs-5",items:[{key:"oculusSinister.lens",feedback:"{'glyphicontop': true, 'glyphicon': true, 'glyphicon-ok': hasSuccess(), 'glyphicon-remove': hasError()}",notitle:!0,options:{tagging:$scope.tagTransform,taggingLabel:"(new)",taggingTokens:"ENTER"}}]}]},{type:"section",htmlClass:"row",items:[{type:"section",htmlClass:"col-xs-5",items:[{key:"oculusDexter.fundus",feedback:"{'glyphicontop': true, 'glyphicon': true, 'glyphicon-ok': hasSuccess(), 'glyphicon-remove': hasError()}",notitle:!0,options:{tagging:$scope.tagTransform,taggingLabel:"(new)",taggingTokens:"ENTER"}}]},{type:"help",helpvalue:'<label class="control-label ng-binding">Fundus</label>',htmlClass:"col-xs-2 col-centered"},{type:"section",htmlClass:"col-xs-5",items:[{key:"oculusSinister.fundus",feedback:"{'glyphicontop': true, 'glyphicon': true, 'glyphicon-ok': hasSuccess(), 'glyphicon-remove': hasError()}",notitle:!0,options:{tagging:$scope.tagTransform,taggingLabel:"(new)",taggingTokens:"ENTER"}}]}]},{type:"section",htmlClass:"row",items:[{type:"section",htmlClass:"col-xs-5",items:[{key:"oculusDexter.opticNerve",feedback:"{'glyphicontop': true, 'glyphicon': true, 'glyphicon-ok': hasSuccess(), 'glyphicon-remove': hasError()}",notitle:!0,options:{tagging:$scope.tagTransform,taggingLabel:"(new)",taggingTokens:"ENTER"}}]},{type:"help",helpvalue:'<label class="control-label ng-binding">Optic Nerve</label>',htmlClass:"col-xs-2 col-centered"},{type:"section",htmlClass:"col-xs-5",items:[{key:"oculusSinister.opticNerve",feedback:"{'glyphicontop': true, 'glyphicon': true, 'glyphicon-ok': hasSuccess(), 'glyphicon-remove': hasError()}",notitle:!0,options:{tagging:$scope.tagTransform,taggingLabel:"(new)",taggingTokens:"ENTER"}}]}]},{type:"section",htmlClass:"row",items:[{type:"section",htmlClass:"col-xs-5",items:[{key:"oculusDexter.eom",feedback:"{'glyphicontop': true, 'glyphicon': true, 'glyphicon-ok': hasSuccess(), 'glyphicon-remove': hasError()}",notitle:!0,options:{tagging:$scope.tagTransform,taggingLabel:"(new)",taggingTokens:"ENTER"}}]},{type:"help",helpvalue:'<label class="control-label ng-binding">EOM</label>',htmlClass:"col-xs-2 col-centered"},{type:"section",htmlClass:"col-xs-5",items:[{key:"oculusSinister.eom",feedback:"{'glyphicontop': true, 'glyphicon': true, 'glyphicon-ok': hasSuccess(), 'glyphicon-remove': hasError()}",notitle:!0,options:{tagging:$scope.tagTransform,taggingLabel:"(new)",taggingTokens:"ENTER"}}]}]},{type:"section",htmlClass:"row",items:[{type:"section",htmlClass:"col-xs-5",items:[{key:"oculusDexter.va",type:"text",notitle:!0}],readonly:!0},{type:"help",helpvalue:'<label class="control-label ng-binding">V/A</label>',htmlClass:"col-xs-2 col-centered"},{type:"section",htmlClass:"col-xs-5",items:[{key:"oculusSinister.va",notitle:!0,type:"text"}],readonly:!0}]},{type:"section",htmlClass:"row",items:[{type:"section",htmlClass:"col-xs-5",items:[{key:"oculusDexter.bcva",type:"text",notitle:!0}]},{type:"help",helpvalue:'<label class="control-label ng-binding">BCVA</label>',htmlClass:"col-xs-2 col-centered"},{type:"section",htmlClass:"col-xs-5",items:[{key:"oculusSinister.bcva",notitle:!0,type:"text"}]}]},{type:"section",htmlClass:"row",items:[{type:"section",htmlClass:"col-xs-5",items:[{key:"oculusDexter.bcvaWith",type:"text",notitle:!0}]},{type:"help",helpvalue:'<label class="control-label ng-binding">BCVA With</label>',htmlClass:"col-xs-2 col-centered"},{type:"section",htmlClass:"col-xs-5",items:[{key:"oculusSinister.bcvaWith",notitle:!0,type:"text"}]}]},{type:"section",htmlClass:"row",items:[{type:"section",htmlClass:"col-xs-5",items:[{key:"oculusDexter.iop",type:"text",notitle:!0}]},{type:"help",helpvalue:'<label class="control-label ng-binding">IOP</label>',htmlClass:"col-xs-2 col-centered"},{type:"section",htmlClass:"col-xs-5",items:[{key:"oculusSinister.iop",notitle:!0,type:"text"}]}]},{key:"comment",type:"textarea",placeholder:"Make a comment"}],$scope.onSubmit=function(form){$scope.$broadcast("schemaFormValidate"),form.$valid&&(console.log($scope.examination),$scope.create())},$scope.create=function(){var examination=new Examinations($scope.examination);examination.$save(function(response){Logger.success("Examination created successfully",!0),$scope.examination={}},function(errorResponse){Logger.error(errorResponse.data.message,!0)})},$scope.remove=function(examination){if(examination){examination.$remove();for(var i in $scope.examinations)$scope.examinations[i]===examination&&$scope.examinations.splice(i,1)}else $scope.examination.$remove(function(){$location.path("examinations")})},$scope.update=function(){var examination=$scope.examination;examination.$update(function(){$location.path("examinations/"+examination._id),Logger.success("Examination updated successfully",!0)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.examinations=Examinations.query()},$scope.findOne=function(callback){Examinations.get({examinationId:$stateParams.examinationId},function(_examination){$scope.examination=_examination,$scope.$broadcast("schemaFormRedraw"),callback&&callback()})},$scope.search=function(callback){var examination=new Examinations($scope.examination);Examinations.search(examination,function(_examinations){$scope.examinations=_examinations.list,callback&&callback()})},$scope.initOne=function(){$scope.examination=new Examinations({})},$scope.initCreate=function(){$scope.initOne(),Patients.get({patientId:$stateParams.patientId},function(patient){patient&&($scope.examination._patient=patient._id,CoreProperties.setPageSubTitle(patient.fullName),Toolbar.addToolbarCommand("clearExamination","create_examination","Clear","refresh",0),Toolbar.addToolbarCommand("saveExamination","create_examination","Save","floppy-save",1))})},$scope.initEdit=function(){$scope.findOne(function(){CoreProperties.setPageSubTitle($scope.examination._patient.fullName),Toolbar.addToolbarCommand("updateExamination","edit_examination","Save","floppy-save",0)})},$scope.initView=function(){$scope.schema.readonly=!0,$scope.findOne(function(){CoreProperties.setPageSubTitle($scope.examination._patient.fullName),Toolbar.addToolbarCommand("editExamination","edit_examination","Edit","edit",1),Toolbar.addToolbarCommand("deleteExamination","delete_examination","Delete","trash",2,null,"Are you sure to delete examination ?")})},$scope.initSearch=function(){$scope.initOne(),Toolbar.addToolbarCommand("searchExaminations","search_examinations","Search","search",0)},ActionsHandler.onActionFired("saveExamination",$scope,function(action,args){$scope.onSubmit($scope.forms.examinationForm)}),ActionsHandler.onActionFired("updateExamination",$scope,function(action,args){$scope.update()}),ActionsHandler.onActionFired("searchExaminations",$scope,function(action,args){$scope.search(function(){$scope.tabsConfig.showResults=!0})}),ActionsHandler.onActionFired("editExamination",$scope,function(action,args){$location.path("examinations/"+$scope.examination._id+"/edit")}),ActionsHandler.onActionFired("deleteExamination",$scope,function(action,args){$scope.remove()})}]),angular.module("examinations").factory("Examinations",["$resource",function($resource){return $resource("examinations/:examinationId",{examinationId:"@_id"},{update:{method:"PUT"},search:{method:"GET",url:"examinations/search"}})}]),angular.module("manage-users").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Users","manage-users","dropdown","/manage-users(/create)?",!1,1),Menus.addSubMenuItem("topbar","manage-users","List users","manage-users","/manage-users",!1,"list_users",0),Menus.addSubMenuItem("topbar","manage-users","New user","manage-users/create","/manage-users/create",!1,"create_user",1),Menus.addSubMenuItem("topbar","manage-users","Search users","manage-users/search","/manage-users/search",!1,"search_users",2)}]),angular.module("manage-users").config(["$stateProvider",function($stateProvider){$stateProvider.state("listManageUsers",{url:"/manage-users",templateUrl:"modules/manage-users/views/list-manage-users.client.view.html",action:"list_users",title:"Users"}).state("createManageUser",{url:"/manage-users/create",templateUrl:"modules/manage-users/views/create-manage-user.client.view.html",action:"create_user",title:"New user"}).state("searchManageUser",{url:"/manage-users/search",templateUrl:"modules/manage-users/views/search-manage-users.client.view.html",action:"search_users",title:"Search Users"}).state("viewManageUser",{url:"/manage-users/:manageUserId",templateUrl:"modules/manage-users/views/view-manage-user.client.view.html",action:"view_user",title:"View User"}).state("editManageUser",{url:"/manage-users/:manageUserId/edit",templateUrl:"modules/manage-users/views/edit-manage-user.client.view.html",action:"edit_user",title:"Edit User"})}]),angular.module("manage-users").controller("ManageUsersController",["$scope","$stateParams","$location","ManageUsers","Roles","Logger","ActionsHandler","Toolbar",function($scope,$stateParams,$location,ManageUsers,Roles,Logger,ActionsHandler,Toolbar){$scope.initRoles=function(callback){$scope.rolesObj={},$scope.rolesObj.selected_role=null,$scope.rolesObj.selected_roles=[],Roles.query(function(_roles){$scope.rolesObj.roles=_roles,callback&&callback()})},$scope.toggleRoleSelection=function(role_id){$scope.manageUser._role=role_id},$scope.initOne=function(){$scope.initRoles(function(){$scope.manageUser=new ManageUsers({password:Math.random().toString(36).slice(-8)})})},$scope.create=function(){var manageUser=$scope.manageUser;manageUser.$save(function(response){$location.path("manage-users/"+response._id),Logger.success("User created successfully",!0),$scope.initOne()},function(errorResponse){Logger.error(errorResponse.data.message,!0)})},$scope.remove=function(manageUser){manageUser?manageUser.$remove(function(){for(var i in $scope.manageUsers)$scope.manageUsers[i]===manageUser&&$scope.manageUsers.splice(i,1);Logger.success("User deleted successfully",!0)},function(errorResponse){Logger.error(errorResponse.data.message,!0)}):$scope.manageUser.$remove(function(){$location.path("manage-users"),Logger.success("User deleted successfully",!0)},function(errorResponse){Logger.error(errorResponse.data.message,!0)})},$scope.update=function(){var manageUser=$scope.manageUser;manageUser.$update(function(){$location.path("manage-users/"+manageUser._id),Logger.success("User updated successfully",!0)},function(errorResponse){Logger.error(errorResponse.data.message,!0)})},$scope.find=function(){$scope.manageUsers=ManageUsers.query()},$scope.findOne=function(callback){$scope.initRoles(function(){ManageUsers.get({manageUserId:$stateParams.manageUserId},function(_user){$scope.manageUser=_user,_user._role&&$scope.rolesObj.selected_roles.push(_user._role),callback&&callback()})})},$scope.search=function(callback){$scope.manageUser.fullName&&""!=$scope.manageUser.fullName&&void 0!=$scope.manageUser.fullName||$scope.manageUser.displayName&&""!=$scope.manageUser.displayName&&void 0!=$scope.manageUser.displayName||$scope.manageUser.email&&""!=$scope.manageUser.email&&void 0!=$scope.manageUser.email||$scope.manageUser._role&&""!=$scope.manageUser._role&&void 0!=$scope.manageUser._role?ManageUsers.query($scope.manageUser,function(_users){$scope.manageUsers=_users,callback&&callback()}):(Logger.error("Please Enter Search Criteria",!0),$scope.manageUsers=[])},$scope.$watch("rolesObj.selected_role",function(value){$scope.manageUser&&(value?$scope.manageUser._role=value._id:$scope.manageUser._role=value)},!0),$scope.initCreate=function(){$scope.initOne(),Toolbar.addToolbarCommand("saveUser","create_user","Save","floppy-save",0)},$scope.initEdit=function(){$scope.initRoles(function(){$scope.findOne(function(){Toolbar.addToolbarCommand("updateUser","edit_user","Save","floppy-save",0)})})},$scope.initView=function(){$scope.findOne(function(){Toolbar.addToolbarCommand("editUser","edit_user","Edit","edit",1),Toolbar.addToolbarCommand("deleteUser","delete_user","Delete","trash",2,null,'Are you sure to delete user "'+$scope.manageUser.email+'"?')})},$scope.initSearch=function(){$scope.initOne(),$scope.tabsConfig={},$scope.tabsConfig.showResuls=!1,Toolbar.addToolbarCommand("searchUser","search_users","Search","search",0)},ActionsHandler.onActionFired("saveUser",$scope,function(action,args){$scope.create()}),ActionsHandler.onActionFired("updateUser",$scope,function(action,args){$scope.update()}),ActionsHandler.onActionFired("editUser",$scope,function(action,args){$location.path("manage-users/"+$scope.manageUser._id+"/edit")}),ActionsHandler.onActionFired("deleteUser",$scope,function(action,args){$scope.remove()}),ActionsHandler.onActionFired("searchUser",$scope,function(action,args){$scope.search(function(){$scope.tabsConfig.showResults=!0})})}]),angular.module("manage-users").factory("ManageUsers",["$resource",function($resource){return $resource("manage-users/:manageUserId",{manageUserId:"@_id"},{update:{method:"PUT"}})}]),angular.module("module").factory("Module",["$resource",function($resource){return $resource("module/list")}]),angular.module("patients").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Patients","patients","dropdown","/patients(/create)?",!1,2),Menus.addSubMenuItem("topbar","patients","List Patients","patients","/patients",!1,"list_patients",0),Menus.addSubMenuItem("topbar","patients","New Patient","patients/create","/patients/create",!1,"create_patient",1),Menus.addSubMenuItem("topbar","patients","Search Patient","patients/search","/patients/search",!1,"search_patients",2)}]),angular.module("patients").config(["$stateProvider",function($stateProvider){$stateProvider.state("listPatients",{url:"/patients",templateUrl:"modules/patients/views/list-patients.client.view.html",action:"list_patients",title:"Patients"}).state("createPatient",{url:"/patients/create",templateUrl:"modules/patients/views/create-patient.client.view.html",
action:"create_patient",title:"New Patient"}).state("searchPatients",{url:"/patients/search",templateUrl:"modules/patients/views/search-patients.client.view.html",action:"search_patients",title:"Search Patients"}).state("viewPatient",{url:"/patients/:patientId",templateUrl:"modules/patients/views/view-patient.client.view.html",action:"view_patient",title:"View Patient"}).state("editPatient",{url:"/patients/:patientId/edit",templateUrl:"modules/patients/views/edit-patient.client.view.html",action:"edit_patient",title:"Edit Patient"})}]),angular.module("patients").controller("PatientsController",["$scope","$stateParams","$location","Patients","Logger","lodash","moment","$modal","$upload","ActionsHandler","Toolbar",function($scope,$stateParams,$location,Patients,Logger,lodash,Moment,$modal,$upload,ActionsHandler,Toolbar){$scope.configObj={},$scope.configObj._=lodash,$scope.configObj.Moment=Moment,$scope.configObj.genders=[{_id:"male",name:"Male"},{_id:"female",name:"Female"}],$scope.configObj.photo=null,$scope.configObj.age=null,$scope.configObj.patient_genders=[],$scope.configObj.maxDate=new Moment,$scope.configObj.minDate=(new Moment).subtract(150,"years"),$scope.configObj.dateOptions={formatYear:"yyyy",startingDay:6},$scope.configObj.format="yyyy/MM/dd",$scope.configObj.opened=!1,$scope.configObj.photoCss=null,$scope.configObj.personalPhotoPath=null,$scope.today=function(){$scope.patient.birthDate=new Moment},$scope.clear=function(){$scope.patient.birthDate=null},$scope.openDatePicker=function($event){$event.preventDefault(),$event.stopPropagation(),$scope.configObj.opened=!0},$scope.ageChanged=function(newAge){$scope.patient.birthDate=(new Moment).subtract(newAge,"years").format("YYYY/MM/DD")},$scope.birthDateChanged=function(birthDate){$scope.configObj.age=(new Moment).diff(new Moment(birthDate),"years")},lodash.mixin({findByValues:function(collection,property,values){return lodash.filter(collection,function(item){return lodash.contains(values,item[property])})}}),lodash.mixin({findByValuesInPath:function(collection,property,values,path){return lodash.filter(collection,function(item){return lodash.contains(lodash.map(values,path),item[property])})}}),$scope.openModal=function(size){var modalInstance=$modal.open({templateUrl:"myModalContent.html",controller:"ModalInstanceCtrl",size:size,resolve:{items:function(){return $scope.items}}});modalInstance.result.then(function(finalPhoto){$scope.configObj.photo=finalPhoto,$scope.configObj.photoCss="{'background-image': 'url('+$scope.configObj.photo+')'}"},function(){})},$scope.toggleGenderSelection=function(gender_id){$scope.patient.gender=gender_id};var dataURItoBlob=function(dataURI){for(var binary=atob(dataURI.split(",")[1]),mimeString=dataURI.split(",")[0].split(":")[1].split(";")[0],array=[],i=0;i<binary.length;i++)array.push(binary.charCodeAt(i));return new Blob([new Uint8Array(array)],{type:mimeString})};$scope.create=function(){var patient=angular.fromJson(angular.toJson($scope.patient));$scope.configObj.photo&&lodash.extend(patient,{personalPhoto:!0});var blob=$scope.configObj.photo?dataURItoBlob($scope.configObj.photo):null;$upload.upload({url:"/patients",method:"POST",headers:{"Content-Type":"multipart/form-data"},data:patient,file:blob}).success(function(response,status){$location.path("patients/"+response._id),response.warn?Logger.warn(response.error.message,!0):Logger.success("Patient created successfully",!0),$scope.initOne()}).error(function(err){Logger.error(err.message,!0)})},$scope.remove=function(patient){patient?patient.$remove(function(){for(var i in $scope.patients)$scope.patients[i]===patient&&$scope.patients.splice(i,1);Logger.success("Patient deleted successfully",!0)},function(errorResponse){Logger.error(errorResponse.data.message,!0)}):$scope.patient.$remove(function(){$location.path("patients"),Logger.success("Patient deleted successfully",!0)},function(errorResponse){Logger.error(errorResponse.data.message,!0)})},$scope.examine=function(){$location.path("examinations/create/"+$scope.patient._id)},$scope.update=function(){var patient=angular.fromJson(angular.toJson($scope.patient));$scope.configObj.photo&&lodash.extend(patient,{personalPhoto:!0});var blob=$scope.configObj.photo?dataURItoBlob($scope.configObj.photo):null;$upload.upload({url:"/patients/"+patient._id,method:"PUT",headers:{"Content-Type":"multipart/form-data"},data:patient,file:blob}).success(function(response,status){$location.path("patients/"+response._id),response.warn?Logger.warn(response.error.message,!0):Logger.success("Patient updated successfully",!0),$scope.initOne()}).error(function(err){Logger.error(err.message,!0)})},$scope.findOne=function(callback){var patient=Patients.get({patientId:$stateParams.patientId},function(){$scope.patient=patient,$scope.configObj.age=(new Moment).diff(new Moment($scope.patient.birthDate,"YYYY/MM/DD"),"years"),$scope.patient.personalPhoto&&($scope.configObj.personalPhotoPath="patients/personal-photo/"+$scope.patient._id),callback&&callback()})},$scope.search=function(callback){var query=$scope.patient;query.paginationConfig={},query.paginationConfig.pageNo=$scope.paginationConfig.currentPage,query.paginationConfig.pageSize=$scope.paginationConfig.pageSize,Patients.query($scope.patient,function(_res){$scope.patients=_res.list,callback&&callback(_res.count)})},$scope.initOne=function(){$scope.patient=new Patients({})},$scope.initCreate=function(){$scope.initOne(),Toolbar.addToolbarCommand("savePatient","create_patient","Save","floppy-save",0)},$scope.initEdit=function(){$scope.findOne(function(){Toolbar.addToolbarCommand("updatePatient","edit_patient","Save","floppy-save",0)})},$scope.initView=function(){$scope.findOne(function(){Toolbar.addToolbarCommand("examinePatient","create_examination","Examine","eye-open",0),Toolbar.addToolbarCommand("patientExaminations","search_examinations","List","list",1),Toolbar.addToolbarCommand("editPatient","edit_patient","Edit","edit",2),Toolbar.addToolbarCommand("deletePatient","delete_patient","Delete","trash",3,null,'Are you sure to delete patient "'+$scope.patient.fullName+'"?')})},$scope.initSearch=function(){$scope.initOne(),$scope.tabsConfig={},$scope.tabsConfig.showResuls=!1,$scope.paginationConfig={},$scope.paginationConfig.pageSize=10,$scope.paginationConfig.currentPage=1,$scope.paginationConfig.totalItems=0,$scope.paginationConfig.maxSize=2,$scope.paginationConfig.numPages=1,$scope.paginationConfig.pageSizeOptions=[10,50,100],$scope.paginationConfig.showPagination=!1,Toolbar.addToolbarCommand("searchPatient","search_patients","Search","search",0)},$scope.initList=function(){$scope.initOne(),$scope.tabsConfig={},$scope.tabsConfig.showResuls=!1,$scope.paginationConfig={},$scope.paginationConfig.pageSize=10,$scope.paginationConfig.currentPage=1,$scope.paginationConfig.totalItems=0,$scope.paginationConfig.maxSize=2,$scope.paginationConfig.numPages=1,$scope.paginationConfig.pageSizeOptions=[10,50,100],$scope.paginationConfig.showPagination=!1,$scope.fireSearch()},$scope.getShowPagination=function(){return $scope.paginationConfig.totalItems>0},$scope.pageChanged=function(){$scope.fireSearch()},$scope.getNumOfPages=function(){return $scope.paginationConfig.totalItems/$scope.paginationConfig.maxSize},$scope.selectPageSizeOption=function(_option){$scope.isPageSizeOptionEnabled(_option)&&($scope.paginationConfig.pageSize=_option,$scope.fireSearch())},$scope.isPageSizeOptionEnabled=function(_option){var optionIndex=$scope.paginationConfig.pageSizeOptions.indexOf(_option);return 0==optionIndex?!0:$scope.paginationConfig.pageSizeOptions[optionIndex-1]<$scope.paginationConfig.totalItems},$scope.isPageSizeOptionSelecetd=function(_option){return $scope.paginationConfig.pageSize==_option},ActionsHandler.onActionFired("savePatient",$scope,function(action,args){$scope.create()}),ActionsHandler.onActionFired("updatePatient",$scope,function(action,args){$scope.update()}),ActionsHandler.onActionFired("examinePatient",$scope,function(action,args){$scope.examine()}),ActionsHandler.onActionFired("patientExaminations",$scope,function(action,args){$location.path("examinations/"+$scope.patient._id)}),ActionsHandler.onActionFired("editPatient",$scope,function(action,args){$location.path("patients/"+$scope.patient._id+"/edit")}),ActionsHandler.onActionFired("deletePatient",$scope,function(action,args){$scope.remove()}),ActionsHandler.onActionFired("searchPatient",$scope,function(action,args){$scope.fireSearch()}),$scope.fireSearch=function(){$scope.search(function(_count){$scope.tabsConfig.showResults=!0,$scope.paginationConfig.totalItems=_count,$scope.paginationConfig.showPagination=$scope.getShowPagination(),$scope.paginationConfig.numPages=$scope.getNumOfPages()})}}]),angular.module("patients").controller("ModalInstanceCtrl",["$scope","$modalInstance","items","Logger",function($scope,$modalInstance,items,Logger){$scope.modalConfig={},$scope.modalConfig.tabs=[{active:!0,disabled:!1},{active:!1,disabled:!1},{active:!1,disabled:!0}],$scope.modalConfig.photoWidth=null,$scope.modalConfig.photoHeight=null,$scope.modalConfig.finalPhoto=null,$scope.modalConfig.photos=[],$scope.modalConfig.selectedPhoto=null,$scope.modalConfig.inputImage=null,$scope.modalConfig.webcamError=!1;var _video=null;$scope.onSuccess=function(videoElem){_video=videoElem};var getVideoData=function(){var hiddenCanvas=document.createElement("canvas");hiddenCanvas.width=_video.width,hiddenCanvas.height=_video.height;var ctx=hiddenCanvas.getContext("2d");return ctx.drawImage(_video,0,0,_video.width,_video.height),$scope.modalConfig.photoWidth=document.defaultView.getComputedStyle(_video,"").getPropertyValue("width"),$scope.modalConfig.photoHeight=document.defaultView.getComputedStyle(_video,"").getPropertyValue("height"),hiddenCanvas.toDataURL()};$scope.makeSnapshot=function(){if(_video){var idata=getVideoData();$scope.modalConfig.photos.push({src:idata})}};var img=new Image;img.onload=function(){this.width,this.height,this.src},$scope.inputPhoto=function(files){var file=files[0],reader=new FileReader;reader.onload=function(evt){$scope.$apply(function($scope){$scope.modalConfig.inputImage=evt.target.result,img.src=evt.target.result})},reader.readAsDataURL(file)},$scope.selectInputPhoto=function(){$scope.modalConfig.photoWidth=img.width,$scope.modalConfig.photoHeight=img.height,$scope.modalConfig.tabs[2].disabled=!1},$scope.selectPhoto=function(photo){$scope.modalConfig.selectedPhoto=photo,$scope.modalConfig.tabs[2].disabled=!1,$scope.modalConfig.tabs[2].active=!0},$scope.onCamError=function(err){$scope.$apply(function(){$scope.modalConfig.webcamError=err})},$scope.photoCropped=function($dataURI){$scope.modalConfig.finalPhoto=$dataURI},$scope.ok=function(){$modalInstance.close($scope.modalConfig.finalPhoto)},$scope.cancel=function(){$modalInstance.dismiss("cancel")}}]),angular.module("patients").directive("backImg",function(){return function(scope,element,attrs){attrs.$observe("backImg",function(value){element.css({"background-image":"url("+value+")"})})}}),angular.module("patients").directive("widthCss",function(){return function(scope,element,attrs){attrs.$observe("widthCss",function(value){element.css({width:value})})}}),angular.module("patients").directive("heightCss",function(){return function(scope,element,attrs){attrs.$observe("heightCss",function(value){element.css({height:value})})}}),angular.module("patients").factory("Patients",["$resource",function($resource){return $resource("patients/:patientId",{patientId:"@_id"},{update:{method:"PUT"},query:{isArray:!1}})}]),angular.module("roles").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Roles","roles","dropdown","/roles(/create)?(/search)?",!1,0),Menus.addSubMenuItem("topbar","roles","List Roles","roles","/roles",!1,"list_roles",0),Menus.addSubMenuItem("topbar","roles","New Role","roles/create","/roles/create",!1,"create_role",1),Menus.addSubMenuItem("topbar","roles","Search Roles","roles/search","/roles/search",!1,"search_roles",2)}]),angular.module("roles").config(["$stateProvider",function($stateProvider){$stateProvider.state("listRoles",{url:"/roles",templateUrl:"modules/roles/views/list-roles.client.view.html",requiresLogin:!0,action:"list_roles",title:"Roles"}).state("createRole",{url:"/roles/create",templateUrl:"modules/roles/views/create-role.client.view.html",requiresLogin:!0,action:"create_role",title:"New Role"}).state("searchRoles",{url:"/roles/search",templateUrl:"modules/roles/views/search-roles.client.view.html",requiresLogin:!0,action:"search_roles",title:"Search Roles"}).state("editRole",{url:"/roles/:roleId/edit",templateUrl:"modules/roles/views/edit-role.client.view.html",requiresLogin:!0,action:"edit_role",title:"Edit Role"}).state("viewRole",{url:"/roles/:roleId",templateUrl:"modules/roles/views/view-role.client.view.html",requiresLogin:!0,action:"view_role",title:"View Role"})}]),angular.module("roles").controller("RolesController",["$scope","$stateParams","$location","Roles","Module","Action","Logger","ActionsHandler","Toolbar","lodash",function($scope,$stateParams,$location,Roles,Module,Action,Logger,ActionsHandler,Toolbar,lodash){$scope._=lodash,lodash.mixin({findByValues:function(collection,property,values){return lodash.filter(collection,function(item){return lodash.contains(values,item[property])})}}),lodash.mixin({findByValuesInPath:function(collection,property,values,path){return lodash.filter(collection,function(item){return lodash.contains(lodash.map(values,path),item[property])})}}),$scope.initActions=function(callback){$scope.actionsObj={},$scope.actionsObj.selected_modules=[],$scope.actionsObj.actions=[],$scope.actionsObj.role_actions=[],$scope.actionsObj.selected_module=null,$scope.actionsObj.selected_action=null,Module.query(function(_modules){$scope.actionsObj.modules=_modules,Action.query(function(_all_actions){$scope.actionsObj.all_actions=_all_actions,callback()})})},$scope.$watch("actionsObj.selected_module",function(value){$scope.actionsObj.selected_module&&($scope.actionsObj.actions=lodash.where($scope.actionsObj.all_actions,{_module:$scope.actionsObj.selected_module._id}))},!0),$scope.$watch("actionsObj.role_actions",function(value){if($scope.actionsObj.selected_modules=[],$scope.actionsObj.role_actions)for(var i=0;i<$scope.actionsObj.role_actions.length;i++){var actionModule=lodash.where($scope.actionsObj.modules,{_id:$scope.actionsObj.role_actions[i]._module});lodash.contains($scope.actionsObj.selected_modules,actionModule[0])||$scope.actionsObj.selected_modules.push(actionModule[0])}},!0),$scope.filterModuleActions=function(value,index,array){return array&&$scope.actionsObj.selected_module&&array[index]._module==$scope.actionsObj.selected_module._id?!0:!1},$scope.initOne=function(callback){$scope.initActions(function(){$scope.role=new Roles({}),callback&&callback()})},$scope.create=function(){var _role=$scope.role;_role._actions=$scope.actionsObj.role_actions,_role.$save(function(response){$location.path("roles/"+response._id),Logger.success("Role created successfully",!0),$scope.initOne()},function(errorResponse){Logger.error(errorResponse.data.message,!0)})},$scope.remove=function(role){role?role.$remove(function(){for(var i in $scope.roles)$scope.roles[i]===role&&$scope.roles.splice(i,1);Logger.success("Role deleted successfully",!0)},function(errorResponse){Logger.error(errorResponse.data.message,!0)}):$scope.role.$remove(function(){Logger.success("Role deleted successfully",!0),$location.path("roles")},function(errorResponse){Logger.error(errorResponse.data.message,!0)})},$scope.update=function(){var _role=$scope.role;role._actions=$scope.actionsObj.role_actions,_role.$update(function(){$location.path("roles/"+role._id),Logger.success("Role updated successfully",!0)},function(errorResponse){Logger.error(errorResponse.data.message,!0)})},$scope.search=function(callback){var role=$scope.role;role._actions=$scope.actionsObj.role_actions,role.name&&""!=role.name&&void 0!=role.name||role._actions&&0!=role._actions.length?Roles.query(role,function(_roles){$scope.roles=_roles,callback()}):Logger.error("Please Enter Search Criteria",!0)},$scope.find=function(){Roles.query(function(_roles){$scope.roles=_roles})},$scope.findOne=function(callback){Roles.get({roleId:$stateParams.roleId},function(_role){console.log(_role),$scope.role=_role,$scope.actionsObj.role_actions=lodash.findByValues($scope.actionsObj.all_actions,"_id",$scope.role._actions);for(var i=0;i<$scope.actionsObj.modules.length;i++)if(lodash.where($scope.role._actions,{_module:$scope.actionsObj.modules[i]._id}).length>0){$scope.actionsObj.selected_module=$scope.actionsObj.modules[i];break}callback&&callback()})},$scope.initCreate=function(){$scope.initOne(function(){Toolbar.addToolbarCommand("saveRole","create_role","Save","floppy-save",0)})},$scope.initEdit=function(){$scope.initActions(function(){$scope.findOne(function(){Toolbar.addToolbarCommand("updateRole","edit_role","Save","floppy-save",0)})})},$scope.initView=function(){$scope.initActions(function(){$scope.findOne(function(){Toolbar.addToolbarCommand("editRole","edit_role","Edit","edit",1),Toolbar.addToolbarCommand("deleteRole","delete_role","Delete","trash",2,null,'Are you sure to delete role "'+$scope.role.name+'"?')})})},$scope.initSearch=function(){$scope.initOne(function(){$scope.tabsConfig={},$scope.tabsConfig.showResuls=!1,Toolbar.addToolbarCommand("searchRole","search_roles","Search","search",0)})},$scope.initList=function(){$scope.initActions(function(){$scope.find()})},ActionsHandler.onActionFired("saveRole",$scope,function(action,args){$scope.create()}),ActionsHandler.onActionFired("updateRole",$scope,function(action,args){$scope.update()}),ActionsHandler.onActionFired("editRole",$scope,function(action,args){$location.path("roles/"+$scope.role._id+"/edit")}),ActionsHandler.onActionFired("deleteRole",$scope,function(action,args){$scope.remove()}),ActionsHandler.onActionFired("searchRole",$scope,function(action,args){$scope.search(function(){$scope.tabsConfig.showResults=!0})})}]),angular.module("roles").factory("Roles",["$resource",function($resource){return $resource("roles/:roleId",{roleId:"@_id"},{update:{method:"PUT"}})}]),angular.module("security").run(["$rootScope","Authentication","$location","lodash","CoreProperties","Toolbar",function($rootScope,Authentication,$location,lodash,CoreProperties,Toolbar){$rootScope.$on("$stateChangeStart",function(event,toState,toParams,fromState,fromParams){if(CoreProperties.setPageSubTitle(null),Toolbar.clearToolbarCommands(),toState.requiresLogin){if(!Authentication.user)return void $location.path("/signin");toState.action&&(lodash.contains(Authentication.user._role._actions,toState.action)||$location.path("/not-authorized"))}})}]),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("/signin");break;case 403:$location.path("/not-authorized")}return $q.reject(rejection)}}}])}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("profile",{url:"/settings/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("password",{url:"/settings/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("accounts",{url:"/settings/accounts",templateUrl:"modules/users/views/settings/social-accounts.client.view.html"}).state("signup",{url:"/signup",templateUrl:"modules/users/views/authentication/signup.client.view.html"}).state("signin",{url:"/signin",templateUrl:"modules/users/views/authentication/signin.client.view.html"}).state("forgot",{url:"/password/forgot",templateUrl:"modules/users/views/password/forgot-password.client.view.html"}).state("reset-invlaid",{url:"/password/reset/invalid",templateUrl:"modules/users/views/password/reset-password-invalid.client.view.html"}).state("reset-success",{url:"/password/reset/success",templateUrl:"modules/users/views/password/reset-password-success.client.view.html"}).state("reset",{url:"/password/reset/:token",templateUrl:"modules/users/views/password/reset-password.client.view.html"}).state("listUsers",{url:"/users",templateUrl:"modules/users/views/list-users.client.view.html",requiresLogin:!0,action:"list_users"}).state("createUser",{url:"/users/create",templateUrl:"modules/users/views/create-user.client.view.html",requiresLogin:!0,action:"create_user"}).state("viewUser",{url:"/users/:userId",templateUrl:"modules/users/views/view-user.client.view.html",requiresLogin:!0,action:"view_user"}).state("editUser",{url:"/users/:userId/edit",templateUrl:"modules/users/views/edit-user.client.view.html",requiresLogin:!0,action:"edit_user"})}]),angular.module("users").controller("AuthenticationController",["$scope","$http","$location","Authentication",function($scope,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.signup=function(){$http.post("/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})},$scope.signin=function(){$http.post("/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication",function($scope,$stateParams,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(){$scope.success=$scope.error=null,$http.post("/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message})},$scope.resetUserPassword=function(){$scope.success=$scope.error=null,$http.post("/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=function(provider){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http["delete"]("/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(isValid){if(isValid){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}else $scope.submitted=!0},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/users/password",$scope.passwordDetails).success(function(response){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("UsersController",["$scope","$stateParams","$location","Authentication","Users","Roles","lodash","Logger",function($scope,$stateParams,$location,Authentication,Users,Roles,lodash,Logger){$scope.authentication=Authentication,$scope._=lodash,$scope.roles=Roles.query(),lodash.mixin({findByValues:function(collection,property,values){return lodash.filter(collection,function(item){return lodash.contains(values,item[property])})}}),lodash.mixin({findByValuesInPath:function(collection,property,values,path){return lodash.filter(collection,function(item){return lodash.contains(lodash.map(values,path),item[property])})}}),$scope.toggleRoleSelection=function(role_id){$scope.user._role=role_id},$scope.create=function(){var user=$scope.user;user.$save(function(response){$location.path("users/"+response._id),Logger.success("User created successfully",!0),$scope.initOne()},function(errorResponse){console.log(errorResponse),Logger.error(errorResponse.data.message,!0)})},$scope.remove=function(user){user?user.$remove(function(){for(var i in $scope.users)$scope.users[i]===user&&$scope.users.splice(i,1);Logger.success("User deleted successfully",!0)},function(errorResponse){Logger.error(errorResponse.data.message,!0)}):$scope.user.$remove(function(){$location.path("users"),Logger.success("User deleted successfully",!0)},function(errorResponse){Logger.error(errorResponse.data.message,!0)})},$scope.update=function(){var user=$scope.user;user.$update(function(){$location.path("users/"+user._id),Logger.success("User updated successfully",!0)},function(errorResponse){Logger.error(errorResponse.data.message,!0)})},$scope.find=function(){$scope.users=Users.query()},$scope.findOne=function(){$scope.user=Users.get({userId:$stateParams.userId})},$scope.initOne=function(){$scope.user=new Users({password:Math.random().toString(36).slice(-8)})}}]),angular.module("users").factory("Authentication",[function(){var _this=this;return _this._data={user:window.user},_this._data}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("users/:userId",{userId:"@_id"},{update:{method:"PUT"}})}]);